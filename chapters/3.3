Extract Links
Time to extract the links and images from our Markdown using regex.

----------------------------------------------------------------------------------------------------
Markdown Links
This is a paragraph with a [link](https://www.google.com).

Markdown Images
![alt text for image](url/of/image.jpg)
----------------------------------------------------------------------------------------------------


Regex Examples (So You Have Them Handy)
The findall function that will return a list of all the matches in a string.

import re
text = "I'm a little teapot, short and stout. Here is my handle, here is my spout."
matches = re.findall(r"teapot", text)
print(matches) # ['teapot']

text = "My email is lane@example.com and my friend's email is hunter@example.com"
matches = re.findall(r"(\w+)@(\w+\.\w+)", text)
print(matches)  # [('lane', 'example.com'), ('hunter', 'example.com')]

Use regexr.com for interactive regex testing, it breaks down each part of the pattern and explains what it does.

Assignment
There are spoilers in the tip section if you don't want to figure out the regex patterns yourself.

Create a function extract_markdown_images(text) that takes raw markdown text and returns a list of tuples. Each tuple should contain the alt text and the URL of any markdown images. For example:
text = "This is text with a ![rick roll](https://i.imgur.com/aKaOqIh.gif) and ![obi wan](https://i.imgur.com/fJRm4Vk.jpeg)"
print(extract_markdown_images(text))
# [("rick roll", "https://i.imgur.com/aKaOqIh.gif"), ("obi wan", "https://i.imgur.com/fJRm4Vk.jpeg")]

Create a similar function extract_markdown_links(text) that extracts markdown links instead of images. It should return tuples of anchor text and URLs. For example:
text = "This is text with a link [to boot dev](https://www.boot.dev) and [to youtube](https://www.youtube.com/@bootdotdev)"
print(extract_markdown_links(text))
# [("to boot dev", "https://www.boot.dev"), ("to youtube", "https://www.youtube.com/@bootdotdev")]

Write a bunch of tests. Here's one for finding an image:
def test_extract_markdown_images(self):
    matches = extract_markdown_images(
        "This is text with an ![image](https://i.imgur.com/zjjcJKZ.png)"
    )
    self.assertListEqual([("image", "https://i.imgur.com/zjjcJKZ.png")], matches)

Run and submit the CLI tests from the root of the project.

Tips
Below are spoilers!!! You don't need to be a regex master for this course, but if you want to challenge yourself, try to write the regexes without looking below. If you don't care, I've provided them for you.

# images
r"!\[([^\[\]]*)\]\(([^\(\)]*)\)"

# regular links
r"(?<!!)\[([^\[\]]*)\]\(([^\(\)]*)\)"
